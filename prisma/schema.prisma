// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id       Int   @id @default(autoincrement())
  username     String   @unique
  password     String
  content      Content[]
  tags         Tags[]
  links        Link[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Content{
  id      Int      @id @default(autoincrement())
  title    String 
  type     String
  link     Link?    @relation(fields:[linkId],references:[id],onDelete:Cascade)
  linkId   Int?
  tags     ContentTags[]
  user     User   @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime       @default(now())
}
model ContentTags {
  content   Content  @relation(fields: [contentId], references: [id])
  contentId Int
  tag       Tags     @relation(fields: [tagId], references: [id])
  tagId     Int

  @@id([contentId, tagId]) 
}

model Tags {
  id      Int      @id @default(autoincrement())
  title   String
  user     User   @relation(fields: [userId], references:[id])
  userId    Int
  content ContentTags[]
}

model Link {
  id     Int      @id @default(autoincrement())
  url    String
  hash   String  @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int  
  content   Content[]
}
